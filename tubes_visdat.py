# -*- coding: utf-8 -*-
"""TUBES-VISDAT

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1tg11YopWQTsOxGe5K7_RLK9_BgHJQBTp
"""

from bokeh.models.widgets import Tabs, Panel
from bokeh.models.annotations import Title
from bokeh.models.widgets.buttons import Dropdown
from bokeh.models.widgets.sliders import DateRangeSlider
from bokeh.models import ColumnDataSource, CustomJS, HoverTool,  Select
from bokeh.io import curdoc
from bokeh.plotting import figure, output_file, show
from bokeh.layouts import column, row
import pandas as pd

data = pd.read_csv('./dataset/indo_covid.csv')

data['Date'] = pd.to_datetime(data['Date'])

data.rename(columns = {'New Cases':'New_Cases'}, inplace = True)
data.rename(columns = {'Total Cases':'Total_Cases'}, inplace = True)
data.rename(columns = {'New Deaths':'New_Deaths'}, inplace = True)
data.rename(columns = {'Total Deaths':'Total_Deaths'}, inplace = True)

cds = ColumnDataSource(data)

daily= figure(sizing_mode="stretch_width", plot_height=350,
             x_axis_type='datetime',
             x_axis_label='Month-Year',
             y_axis_label='Cases',
             y_axis_type="linear",
             title='Daily Cases Covid Province')

tooltips= [
                     ('New Cases', '@New_Cases'),
                     ('Date', '@Date{%F}')
]

daily.add_tools(HoverTool(tooltips=tooltips, formatters={'@Date': 'datetime'}))

##################

# fig_daily_death = figure(sizing_mode="stretch_width", plot_height=350,
#              x_axis_type='datetime',
#              x_axis_label='Month-Year',
#              y_axis_label='Cases',
#              y_axis_type="linear",
#              title='Daily Cases Deaths')
#
# tooltips= [
#                      ('New Deaths', '@New_Deaths'),
#                      ('Date', '@Date{%F}')
# ]
#
# fig_daily_death.add_tools(HoverTool(tooltips=tooltips, formatters={'@Date': 'datetime'}))

cols1 = data[['Date','New_Cases','Location']]
cols2 = cols1[cols1['Location'] == 'DKI Jakarta']
col1_cds = ColumnDataSource(data=cols1)
col2_cds = ColumnDataSource(data=cols2)

#fig_daily_death.line(x='Date', y='New_Deaths', source=col2_cds, color='green')
# callback for list market
update_plot = CustomJS(args=dict(source=col1_cds, sc=col2_cds), code="""
                                var f = cb_obj.value;
                                sc.data['Date'] = [];
                                sc.data['New_Cases'] = [];
                                for(var i = 0; i <= source.get_length(); i++){
                                    if (source.data['Location'][i] == f){
                                        sc.data['Date'].push(source.data['Date'][i]);
                                        sc.data['New_Cases'].push(source.data['New_Cases'][i]);
                                    }
                                }
                                sc.change.emit();
                                """)

dropdown = Select(
        options=list(data["Location"].unique()), value="DKI Jakarta", title="Provinsi"
    )

dropdown.js_on_change('value', update_plot)

death = figure(sizing_mode="fixed", plot_height=500,
             x_axis_type='datetime',
             x_axis_label='Month-Year',
             y_axis_label='Cases Deaths',
             y_axis_type="linear",
             title='Cases Deaths')
tooltipss= [
                     ('New Cases Deaths', '@New_Deaths'),
                     ('Date', '@Date{%F}')
]

death.add_tools(HoverTool(tooltips=tooltipss, formatters={'@Date': 'datetime'}))

death.line(x='Date', y='New_Deaths', source=cds, legend_label='Cases Deaths', color='red')

#slider

date_range_slider = DateRangeSlider(value=(min(data['Date']), max(data['Date'])),
                                    start=min(data['Date']), end=max(data['Date']))

date_range_slider.js_link("value", daily.x_range, "start", attr_selector=0)
date_range_slider.js_link("value", daily.x_range, "end", attr_selector=1)

#asdasdas
date_range_slider_1 = DateRangeSlider(value=(min(data['Date']), max(data['Date'])),
                                    start=min(data['Date']), end=max(data['Date']))

date_range_slider_1.js_link("value", death.x_range, "start", attr_selector=0)
date_range_slider_1.js_link("value", death.x_range, "end", attr_selector=1)

##Layout Bokeh
acc1 = column(dropdown, date_range_slider)
acc2 = column(date_range_slider_1)

layout1 = row([daily,acc1])
layout2 = row([death,acc2])

tab1 = Panel(child=layout1,title="Kasus Harian Covid Pada Setiap Provinsi ")
tab2 = Panel(child=layout2,title="Kasus Hsrian Kematian Covid di Indonesia")
tabs = Tabs(tabs=[ tab1, tab2 ])

curdoc().add_root(tabs)
output_file('asd.html')
show(tabs)